plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
repositories {
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven { url "https://ladysnake.jfrog.io/artifactory/mods" }
    maven {
		name = 'Jitpack'
		url = 'https://jitpack.io'
	}
	maven {
		name = "NerdHub"
		url = "https://maven.abusedmaster.xyz/"
	}
	mavenCentral()
	maven { url "https://api.modrinth.com/maven" }
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven {
		url = uri("https://storage.googleapis.com/devan-maven/")
	}
	maven {url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
dependencies {
    minecraft "com.mojang:minecraft:1.17.1"
    mappings "net.fabricmc:yarn:1.17.1+build.14:v2"
    modImplementation "net.fabricmc:fabric-loader:0.11.6"
    modImplementation("net.devtech:arrp:0.+")
    modImplementation 'software.bernie.geckolib:geckolib-fabric-1.17:3.0.11:dev'
	modImplementation "maven.modrinth:trinkets:3.0.+"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:3.0.1"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:3.0.1"
    
    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.37.0+1.17"

    modImplementation "io.github.cottonmc:LibGui:4.1.5+1.17.1"
    include "io.github.cottonmc:LibGui:4.1.5+1.17.1"
    modImplementation "io.github.kosmx:bendy-lib:2.0.2"
    include "io.github.kosmx:bendy-lib:2.0.2"
    }


processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
